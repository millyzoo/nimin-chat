{"version":3,"sources":["constants/globalStyle.js","components/Footer/Footer.js","constants/breakpoint.js","constants/mainStyle.js","contexts.js","utils.js","components/AvatarOptionInput/AvatarOptionInput.js","pages/HomePage/HomePage.js","config.js","pages/ModePage/ModePage.js","WebAPI.js","pages/ChatPage/ChatPage.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","FooterContainer","styled","footer","AuthorLink","a","Footer","href","target","rel","MEDIA_QUERY_SM","Wrapper","div","SubmitButton","input","AuthContext","createContext","USER_NAME","scrollToTop","window","scrollTo","Avatar","props","background","AvatarInput","OptionButton","Option","label","AvatarOptionInput","id","handleUserInfoChange","htmlFor","type","name","value","onChange","Form","form","Title","h1","InputContainer","InputErrorText","span","Input","AvatarContainer","HomePage","useState","errorMessages","setErrorMessages","useContext","setIsUserLogin","currentUser","setCurrentUser","history","useHistory","e","username","avatar","onSubmit","user","preventDefault","length","match","localStorage","setItem","JSON","stringify","push","placeholder","map","option","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","Container","ModeLink","Link","Mode","ModalBackground","ModalContent","ModalCloseButton","ModalTitle","p","ModePage","isJoinModalOpen","setIsJoinModalOpen","isCreateModalOpen","setIsCreateModalOpen","createRoomId","setCreateRoomId","joinRoomId","setJoinRoomId","reference","ref","orderByChild","isUserLogin","useEffect","handleJoinModalClick","handleCreateModalClick","to","onClick","equalTo","once","snapshot","val","roomID","set","ChatContainer","Chat","ChatName","Sidebar","aside","isSidebarOpen","CloseSidebarButton","MyselfInfo","MyselfImages","Content","section","ChatContent","UserJoinChat","SelfMessage","SelfMessageContent","MessageContentContainer","UserImages","UserInfo","UserName","UserMessage","MessageContent","MessageContentTime","InputField","Emoji","SendButton","button","ChatPage","setIsSidebarOpen","messages","setMessages","currentMessage","setCurrentMessage","roomId","useParams","userData","parse","getItem","on","objectResponse","arrayData","Object","keys","_","getMessageData","writeOnlineState","isSystemMessage","enterChatRoom","isResized","document","querySelector","scrollHeight","className","message","Date","timestamp","toLocaleTimeString","hour","minute","hour12","sendMessage","App","Provider","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.36906c1b.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    font-size: 16px;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    font-family: 'Noto Sans TC', Open-Sans, Arial;\n    font-weight: 400;\n    background: #e9e9e9;\n    color: #505050;\n    transition: all 0.5s linear;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  h1, p {\n    margin: 0;\n  }\n\n  input,\n  input[type=\"button\"],\n  input[type=\"submit\"],\n  input[type=\"file\"],\n  input[type=\"reset\"],\n  button,\n  textarea,\n  select {\n    outline: none;\n    letter-spacing: 1px;\n    appearance: none;\n    outline-style: none;\n    -webkit-appearance: none;\n  }\n\n  input, textarea {\n    resize: none;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from \"styled-components\";\n\nconst FooterContainer = styled.footer`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  height: 60px;\n  color: #b6b6b6;\n  font-size: 0.875rem;\n`;\n\nconst AuthorLink = styled.a`\n  margin-left: 5px;\n  color: #b6b6b6;\n  text-decoration: none;\n  transition: 0.3s;\n\n  &:hover {\n    color: #555555;\n  }\n`;\n\nexport default function Footer() {\n  return (\n    <FooterContainer>\n      <p>Made with by </p>\n      <AuthorLink href=\"https://github.com/milyzoo\" target=\"_blank\" rel=\"noreferrer\">@milyzoo</AuthorLink>\n      <p>.</p>\n    </FooterContainer>\n  );\n}\n","export const MEDIA_QUERY_SM = \"@media (max-width: 575px)\";\nexport const MEDIA_QUERY_MD = \"@media (max-width: 768px)\";\nexport const MEDIA_QUERY_LG = \"@media (max-width: 1280px)\";\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: calc(100vh - 60px); /* 減去 footer + header */\n`;\n\nexport const SubmitButton = styled.input`\n  padding: 12px;\n  border-radius: 50px;\n  width: 100%;\n  border: none;\n  background-color: #00b9a3;\n  color: #ffffff;\n  font-size: 1.125rem;\n  cursor: pointer;\n  transition: all 0.3s;\n\n  &:hover {\n    background-color: #00ad98;\n  }\n`;\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext(null);","const USER_NAME = \"user\";\n\nexport const setUser = (user) => {\n  localStorage.setItem(USER_NAME, JSON.stringify(user));\n};\n\nexport const getUser = () => {\n  return localStorage.getItem(USER_NAME);\n};\n\nexport const scrollToTop = () => window.scrollTo(0, 0);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Avatar = styled.div`\n  margin-bottom: 10px;\n  width: 30px;\n  height: 30px;\n  background-color: ${(props) => props.background};\n  border-radius: 50%;\n  cursor: pointer;\n`;\n\nconst AvatarInput = styled.input`\n  display: none;\n  border: none;\n`;\n\nconst OptionButton = styled.div`\n  position: relative;\n  width: 14px;\n  height: 14px;\n  border: 2px solid #aaaaaa;\n  border-radius: 50%;\n  cursor: pointer;\n\n  &::after {\n    position: absolute;\n    content: \"\";\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: 7px;\n    height: 7px;\n    border-radius: 50%;\n    background-color: #aaaaaa;\n    transition: all 0.3s;\n    opacity: 0;\n  }\n`;\n\nconst Option = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  & + & {\n    margin-left: 30px;\n  }\n\n  input:checked + ${OptionButton}::after {\n    opacity: 1;\n  }\n`;\n\nexport default function AvatarOptionInput({\n  id,\n  background,\n  handleUserInfoChange\n}) {\n\n  return (\n    <>\n      <Option htmlFor={id}>\n        <Avatar background={background} />\n        <AvatarInput\n          type=\"radio\"\n          name=\"avatar\"\n          id={id}\n          value={background}\n          onChange={handleUserInfoChange}\n        />\n        <OptionButton />\n      </Option>\n    </>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { MEDIA_QUERY_SM } from '../../constants/breakpoint';\nimport { Wrapper, SubmitButton } from '../../constants/mainStyle';\nimport { AuthContext } from '../../contexts';\nimport { setUser } from '../../utils';\nimport AvatarOptionInput from './../../components/AvatarOptionInput';\n\nconst Form = styled.form`\n  padding: 40px;\n  width: 400px;\n  background-color: #f5f5f5;\n  border-radius: 20px;\n  box-shadow: 0 10px 60px rgba(0, 0, 0, 0.05);\n\n  ${MEDIA_QUERY_SM} {\n    width: 90%;\n  }\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 40px;\n  color: #00b9a3;\n  font-size: 1.875rem;\n  font-weight: 900;\n  text-align: center;\n`;\n\nconst InputContainer = styled.div`\n  margin: 0 0 30px 0;\n`;\n\nconst InputErrorText = styled.span`\n  margin-left: 20px;\n  color: #d62f39;\n`;\n\nconst Input = styled.input`\n  margin-top: 10px;\n  padding: 10px;\n  width: 100%;\n  height: 45px;\n  border: 1px solid transparent;\n  border-radius: 8px;\n  font-size: 1rem;\n  color: #505050;\n  background-color: #ffffff;\n  transition: all 0.3s;\n\n  &::placeholder {\n    color: #cccccc;\n  }\n\n  &:focus {\n    border: 1px solid #00b9a3;\n  }\n`;\n\nconst AvatarContainer = styled.div`\n  display: flex;\n  margin: 10px 0 30px 0;\n`;\n\nexport default function HomePage() {\n  const [errorMessages, setErrorMessages] = useState('');\n  const { setIsUserLogin, currentUser, setCurrentUser } = useContext(AuthContext);\n  const history = useHistory();\n\n  const avatarbackground = [\n    { id: \"option1\", background: '#e0969b' },\n    { id: \"option2\", background: '#b59a92' },\n    { id: \"option3\", background: '#77bce2' },\n    { id: \"option4\", background: '#93a5d2' },\n  ];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!currentUser.username && !currentUser.avatar) {\n      setErrorMessages('資料填寫不齊全');\n      return;\n    } else if (!currentUser.username) {\n      setErrorMessages('尚未填寫名字');\n      return;\n    } else if (!currentUser.avatar) {\n      setErrorMessages('尚未選擇頭貼');\n      return;\n    }\n\n    if (currentUser.username.length > 7) {\n      setErrorMessages('長度最多 6 個字元');\n      return;\n    }\n\n    if (currentUser.username.match(/[\\s]/g) !== null) {\n      setErrorMessages('不得含空白字元');\n      return;\n    }\n\n    setErrorMessages('');\n    setUser(currentUser);\n    setIsUserLogin(true);\n    history.push('/mode');\n  };\n\n  const handleUserInfoChange = (e) => {\n    switch (e.target.name) {\n      case 'username':\n        setCurrentUser({\n          ...currentUser,\n          username: e.target.value,\n        });\n        setErrorMessages('');\n        break;\n      case 'avatar':\n        setCurrentUser({\n          ...currentUser,\n          avatar: e.target.value,\n        });\n        setErrorMessages('');\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit}>\n        <Title>NIMIN CHAT</Title>\n        <InputContainer>\n          <label htmlFor=\"username\">\n            名字\n            {errorMessages && <InputErrorText>{errorMessages}</InputErrorText>}\n          </label>\n          <Input\n            id=\"username\"\n            name=\"username\"\n            placeholder=\"請填寫名字\"\n            onChange={handleUserInfoChange}\n          />\n        </InputContainer>\n        <p>選擇頭貼</p>\n        <AvatarContainer>\n          {avatarbackground.map((option) => (\n            <AvatarOptionInput\n              key={option.id}\n              id={option.id}\n              handleUserInfoChange={handleUserInfoChange}\n              background={option.background}\n            />\n          ))}\n        </AvatarContainer>\n        <SubmitButton type=\"submit\" value=\"進入聊天室\" />\n      </Form>\n    </Wrapper>\n  );\n}\n","// import firebase from 'firebase'\nimport firebase from \"firebase/app\";\nimport \"firebase/database\"; // Realtime Database\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDXEot_nTMfTpJVR4lfaCuqm74Uz8laHCQ\",\n  authDomain: \"nimin-chat.firebaseapp.com\",\n  databaseURL: \"https://nimin-chat-default-rtdb.firebaseio.com\",\n  projectId: \"nimin-chat\",\n  storageBucket: \"nimin-chat.appspot.com\",\n  messagingSenderId: \"612479268903\",\n  appId: \"1:612479268903:web:6bd28ec327da23617bf602\",\n};\n\nfirebase.initializeApp(firebaseConfig); // 初始化 Firebase\n// const db = firebase.firestore(); // 取得資料庫\nconst database = firebase.database(); // 取得資料庫\n\nexport default database;\n","import React, { useContext, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { MEDIA_QUERY_SM } from '../../constants/breakpoint';\nimport { Wrapper, SubmitButton } from '../../constants/mainStyle';\nimport { Link } from 'react-router-dom';\nimport { FaUsers as UsersIcon, FaDoorOpen as DoorIcon } from 'react-icons/fa';\nimport { BiMessageAdd as MessageAddIcon } from 'react-icons/bi';\nimport { IoIosClose as CloseIcon } from 'react-icons/io';\nimport { useHistory } from 'react-router-dom';\nimport { addChatRoom } from '../../WebAPI'\nimport firebase from 'firebase';\nimport { AuthContext } from '../../contexts';\nimport { scrollToTop } from '../../utils';\n\nconst Container = styled.div`\n  width: 280px;\n`;\n\nconst ModeLink = styled(Link)`\n  display: block;\n  text-decoration: none;\n`\n\nconst Mode = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 40px;\n  padding: 30px 0;\n  background-color: #fff;\n  border-radius: 20px;\n  font-size: 1.5rem;\n  font-weight: 500;\n  color: #00b9a3;\n  cursor: pointer;\n  transition: 0.3s;\n\n  &:hover {\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n    background-color: #00b9a3;\n    color: #ffffff;\n  }\n\n  svg {\n    width: auto;\n    height: 40px;\n  }\n`\n\nconst ModalBackground = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.4);\n`\n\nconst ModalContent = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 50px 80px;\n  width: 33%;\n  min-width: 480px;\n  background-color: #ffffff;\n  border-radius: 20px;\n  box-shadow: 0 0 50px 0 rgba(0, 0, 0, 0.1);\n\n  ${MEDIA_QUERY_SM} {\n    padding: 40px;\n    width: 90%;\n    min-width: auto;\n  }\n`\n\nconst ModalCloseButton = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  border: 2px solid #00b9a3;\n  color: #00b9a3;\n  cursor: pointer;\n  transition: 0.3s;\n\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n\n  &:hover {\n    background-color: #00b9a3;\n    color: #ffffff;\n  }\n`\n\nconst ModalTitle = styled.p`\n  margin-bottom: 40px;\n  background-color: #ffffff;\n  color: #00b9a3;\n  font-size: 1.5rem;\n  font-weight: 500;\n  text-align: center;\n`\n\nconst InputContainer = styled.div`\n  margin-bottom: 40px;\n`\n\nconst InputErrorText = styled.span`\n  margin-left: 20px;\n  color: #d62f39;\n`\n\nconst Input = styled.input`\n  margin-top: 10px;\n  padding: 10px;\n  width: 100%;\n  height: 45px;\n  border: 1px solid transparent;\n  border-radius: 8px;\n  font-size: 1rem;\n  color: #505050;\n  background-color: #f5f5f5;\n  transition: 0.3s;\n\n  &::placeholder {\n    color: #cccccc;\n  }\n\n  &:focus {\n    border: 1px solid #00b9a3;\n  }\n`\n\nexport default function ModePage() {\n  const [isJoinModalOpen, setIsJoinModalOpen] = useState(false)\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false)\n  const [createRoomId, setCreateRoomId] = useState('')\n  const [joinRoomId, setJoinRoomId] = useState('')\n  const [errorMessages, setErrorMessages] = useState('');\n  const history = useHistory();\n  const reference = firebase.database().ref('chats').orderByChild('roomID')\n  const { isUserLogin } = useContext(AuthContext)\n\n  useEffect(() => {\n    if (!isUserLogin) {\n      history.push('/');\n      return\n    }\n  }, [history, isUserLogin])\n\n  scrollToTop();\n\n  const handleJoinModalClick = () => {\n    setIsJoinModalOpen(!isJoinModalOpen);\n    setErrorMessages('');\n  };\n\n  const handleCreateModalClick = () => {\n    setIsCreateModalOpen(!isCreateModalOpen);\n    setErrorMessages('');\n  };\n\n  const handleJoinRoomSubmit = e => {\n    e.preventDefault();\n\n    reference.equalTo(joinRoomId).once('value', (snapshot) => {\n      if (!joinRoomId) {\n        setErrorMessages('尚未輸入房間編號');\n        return\n      }\n\n      if (!snapshot.val()) {\n        setErrorMessages('此房間不存在');\n        return\n      }\n      \n      history.push(`/chat/${joinRoomId}`);\n    })\n  }\n\n  const handleCreateRoomSubmit = e => {\n    e.preventDefault();\n\n    reference.equalTo(createRoomId).once('value', (snapshot) => {\n      if (!createRoomId) {\n        setErrorMessages('尚未輸入房間編號');\n        return\n      }\n\n      if (snapshot.val()) {\n        setErrorMessages('此房間已存在');\n        return\n      }\n      \n      addChatRoom(createRoomId)\n      history.push(`/chat/${createRoomId}`);\n    })\n  }\n  \n  const handleCreateRoomIDChange = e => {\n    setCreateRoomId(e.target.value);\n  }\n  \n  const handleJoinRoomIDChange = e => {\n    setJoinRoomId(e.target.value);\n  }\n\n  return (\n    <Wrapper>\n      <Container>\n        <ModeLink to=\"/chat/lobby\">\n          <Mode>\n            <UsersIcon />\n            聊天大廳\n          </Mode>\n        </ModeLink>\n        <Mode onClick={handleJoinModalClick}>\n          <DoorIcon />\n          加入房間\n        </Mode>\n        { isJoinModalOpen && (\n          <>\n            <ModalBackground onClick={handleJoinModalClick} />\n            <ModalContent>\n              <ModalCloseButton onClick={handleJoinModalClick}><CloseIcon /></ModalCloseButton>\n              <ModalTitle>加入房間</ModalTitle>\n              <form onSubmit={handleJoinRoomSubmit}>\n                <InputContainer>\n                  <label htmlFor=\"room-id\">\n                    房間編號\n                    {errorMessages && <InputErrorText>{errorMessages}</InputErrorText>}\n                  </label>\n                  <Input id=\"room-id\" placeholder=\"請輸入房間編號\" onChange={handleJoinRoomIDChange} />\n                </InputContainer>\n                <SubmitButton type=\"submit\" value=\"加入\" />\n              </form>\n            </ModalContent>\n          </>\n        )}\n        <Mode onClick={handleCreateModalClick}>\n          <MessageAddIcon />\n          創建房間\n        </Mode>\n        { isCreateModalOpen && (\n          <>\n            <ModalBackground onClick={handleCreateModalClick} />\n            <ModalContent>\n              <ModalCloseButton onClick={handleCreateModalClick}><CloseIcon /></ModalCloseButton>\n              <ModalTitle>創建房間</ModalTitle>\n              <form onSubmit={handleCreateRoomSubmit}>\n                <InputContainer>\n                  <label htmlFor=\"room-id\">\n                    房間編號\n                    {errorMessages && <InputErrorText>{errorMessages}</InputErrorText>}\n                  </label>\n                  <Input id=\"room-id\" placeholder=\"請輸入房間編號\" onChange={handleCreateRoomIDChange} />\n                </InputContainer>\n                <SubmitButton type=\"submit\" value=\"建立\" />\n              </form>\n            </ModalContent>\n          </>\n        )}\n      </Container>\n    </Wrapper>\n  );\n}","import database from './config';\n\nexport const addChatRoom = (roomID) => {\n  database.ref(`chats/${roomID}`).set({\n    roomID\n  });\n}\n  \nexport const enterChatRoom = (roomId, username, isSystemMessage) => {\n  database.ref(`messages/${roomId}`).push({\n    id: {  \n      '.sv':'timestamp'\n    },\n    username,\n    isSystemMessage,\n  });\n}\n  \nexport const sendMessage = ({ roomId, message, username, avatar, isSystemMessage }) => {\n  database.ref(`messages/${roomId}`).push({\n    id: {  \n      '.sv':'timestamp'\n    },\n    message,\n    timestamp: {  \n      '.sv':'timestamp'\n    },\n    username,\n    avatar,\n    isSystemMessage,\n  });\n}\n  \nexport const writeOnlineState = (roomId, username) => {\n  database.ref(`onlineUser/${roomId}`).push({\n    username,\n  });\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { MEDIA_QUERY_SM } from '../../constants/breakpoint';\nimport { Wrapper } from '../../constants/mainStyle';\nimport { FiSmile as EmojiIcon } from 'react-icons/fi';\nimport { IoCloseCircle as ChatCloseIcon, IoSend as SendIcon } from 'react-icons/io5';\nimport { RiArrowLeftSLine as ArrowLeftIcon } from 'react-icons/ri';\nimport { AuthContext } from '../../contexts';\nimport { useParams, useHistory } from 'react-router-dom';\nimport database from '../../config';\nimport { getUser, scrollToTop } from '../../utils'\nimport { enterChatRoom, sendMessage, writeOnlineState } from '../../WebAPI'\n\nconst ChatContainer = styled.div`\n  margin-top: 40px;\n  padding: 20px;\n  width: 100%;\n  max-width: 840px;\n  height: calc((100vh - 60px) * 0.8);\n  max-height: 800px;\n`\n\nconst Chat = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n  height: 100%;\n  background-color: #f5f5f5;\n  border-radius: 20px;\n`\n\nconst ChatName = styled.div`\n  position: absolute;\n  top: -40px;\n  left: 20px;\n  display: flex;\n  align-items: center;\n  padding: 0 20px 0 70px;\n  line-height: 40px;\n  background-color: #cccccc;\n  border-radius: 10px 10px 0 0;\n  font-size: 0.9375rem;\n  \n  svg {\n    margin-left: 50px;\n    width: 20px;\n    height: 20px;\n    cursor: pointer;\n    transition: 0.3s;\n\n    &:hover {\n      color: #d62f39;\n    }\n  }\n`\n\nconst Sidebar = styled.aside`\n  position: relative;\n  padding: 20px;\n  width: 180px;\n  height: 100%;\n  background-color: #fff;\n  border-radius: 15px;\n  display: ${props => props.isSidebarOpen ? \"none\" : \"block\"};\n\n  ${MEDIA_QUERY_SM} {\n    width: ${props => props.isSidebarOpen ? \"0\" : \"100%\"};\n  }\n`\n\nconst CloseSidebarButton = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: 75px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 25px;\n  height: 30px;\n  border-radius: 0 50% 50% 0;\n  font-size: 1.375rem;\n  color: #505050;\n  background-color: #cccccc;\n  cursor: pointer;\n  z-index: 1;\n\n  svg {\n    transition: 0.3s;\n    transform: ${props => props.isSidebarOpen ? \"rotate(0)\" : \"rotate(180deg)\" };\n  }\n`\n\nconst MyselfInfo = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid #e9e9e9;\n`\n\n// const OnlineUsers = styled.p`\n//   font-size: 0.815rem;\n//   color: #aaaaaa;\n// `\n\n// const UserList = styled.ul`\n//   margin: 20px 0 0 0;\n//   padding: 0;\n//   list-style: none;\n//   font-size: 0.9375rem;\n// `\n\n// const User = styled.li`\n//   position: relative;\n//   padding-left: 13px;\n\n//   &::before {\n//     position: absolute;\n//     content: \"\";\n//     left: 0;\n//     top: 50%;\n//     transform: translateY(-50%);\n//     width: 6px;\n//     height: 6px;\n//     border-radius: 50%;\n//     background-color: #00b9a3;\n//   }\n\n//   & + & {\n//     margin-top: 10px;\n//   }\n// `\n\nconst MyselfImages = styled.div`\n  width: 18px;\n  height: 18px;\n  margin-right: 8px;\n  background-color: ${props => props.avatar};\n  border-radius: 50%;\n`\n\nconst Content = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n  width: ${props => props.isSidebarOpen ? \"100%\" : \"calc(100% - 200px)\"};\n\n  ${MEDIA_QUERY_SM} {\n    display: ${props => props.isSidebarOpen ? \"flex\" : \"none\"};\n    width: ${props => props.isSidebarOpen ? \"100%\" : \"0\"};\n  }\n`\n\nconst ChatContent = styled.div`\n  padding: 0 10px;\n  height: calc(100% - 70px);\n  overflow: auto;\n  overflow-x:hidden;\n\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n \n  &::-webkit-scrollbar-track {\n    background-color: #e9e9e9;\n    border-radius: 100px;\n  }\n \n  &::-webkit-scrollbar-thumb {\n    background-color: #cccccc;\n    border-radius: 100px;\n  }\n`\n\nconst UserJoinChat = styled.p`\n  margin: 15px auto;\n  padding: 5px 15px;\n  width: fit-content;\n  background-color: #e9e9e9;\n  border-radius: 20px;\n  font-size: 0.875rem;\n`\n\nconst SelfMessage = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-end;\n  margin: 15px 0 15px auto;\n  max-width: 80%;\n`\n\nconst SelfMessageContent = styled.p`\n  padding: 7px 15px;\n  margin-left: 10px;\n  max-width: calc(100% - 64px);\n  height: fit-content;\n  background-color: #00b9a3;\n  color: #ffffff;\n  border-radius: 10px 0 10px 10px;\n  word-wrap: break-word;\n`\n\nconst MessageContentContainer = styled.div`\n    display: flex;\n    margin: 7.5px auto 7.5px 0;\n    max-width: 80%;\n\n  ${MEDIA_QUERY_SM} {\n    width: 100%;\n    max-width: 100%;\n  }\n`\n\nconst UserImages = styled.div`\n  margin-right: 10px;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: ${props => props.background};\n`\n\nconst UserInfo = styled.div`\n  width: calc(100% - 40px);\n`\n\nconst UserName = styled.p`\n  margin-bottom: 5px;\n  color: #aaaaaa;\n  font-size: 0.8125rem;\n`\n\nconst UserMessage = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nconst MessageContent = styled.p`\n  margin-right: 10px;\n  padding: 7px 15px;\n  max-width: calc(100% - 64px);\n  background-color: #fff;\n  border-radius: 0 10px 10px 10px;\n  word-wrap: break-word;\n`\n\nconst MessageContentTime = styled.p`\n  font-size: 0.75rem;\n  color: #aaaaaa;\n`\n\nconst InputField = styled.form`\n  position: relative;\n`\n\nconst Input = styled.input`\n  border: transparent;\n  padding: 0 75px 0 55px;\n  width: 100%;\n  height: 50px;\n  border-radius: 50px;\n  background-color: #fff;\n  font-size: 1rem;\n\n  &::placeholder {\n    color: #cccccc;\n  }\n`\n\nconst Emoji = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 20px;\n  transform: translateY(-50%);\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  \n  svg {\n    width: 100%;\n    color: #cccccc;\n  }\n`\n\nconst SendButton = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 20px;\n  transform: translateY(-50%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  border: none;\n  background-color: #00b9a3;\n  cursor: pointer;\n  transition: 0.3s;\n\n  svg {\n    color: #fff;\n  }\n\n  &:hover {\n    background-color: #00ad98;\n  }\n`\n\nexport default function ChatPage() {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState([]);\n  const { isUserLogin, currentUser } = useContext(AuthContext);\n  const { roomId } = useParams();\n  const history = useHistory();\n  const userData = JSON.parse(getUser('user'));\n  \n  const getMessageData = (roomId) => {\n    database.ref(`messages/${roomId}`).on('value', (snapshot) => {\n      const objectResponse = snapshot.val();\n      if (objectResponse) {\n        const arrayData = Object.keys(objectResponse).map((_) => objectResponse[_]);\n        setMessages(arrayData);\n      }\n    })\n  }\n\n  useEffect(() => {\n    if (!isUserLogin) {\n      history.push('/');\n      return\n    }\n    scrollToTop();\n  }, [history, isUserLogin])\n\n  useEffect(() => {\n    getMessageData(roomId);\n    writeOnlineState(roomId, userData.username);\n    enterChatRoom(roomId, userData.username, true);\n  }, [roomId, userData.username])\n\n  useEffect(() => {\n    const isResized = document.querySelector('.resized');\n    isResized.scrollTo(0, isResized.scrollHeight);\n  }, [messages])\n\n  const handleSidebarOpen = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  }\n\n  const handleInputChange = e => {\n    setCurrentMessage(e.target.value);\n  }\n\n  const handleMessageSubmit = e => {\n    e.preventDefault();\n    if (!currentMessage) return\n\n    sendMessage({ \n      roomId, \n      message: currentMessage, \n      username: userData.username,\n      avatar: userData.avatar,\n      isSystemMessage: false\n    })\n\n    setCurrentMessage('');\n  }\n\n  return (\n    <Wrapper>\n      <ChatContainer>\n        <Chat>\n          <ChatName>\n            { roomId === 'lobby' ? '聊天大廳' : `房間編號 ${roomId}`}\n            <ChatCloseIcon />\n          </ChatName>\n          <Sidebar isSidebarOpen={isSidebarOpen}>\n            <MyselfInfo>\n              <MyselfImages avatar={userData.avatar} />\n              {userData.username}\n            </MyselfInfo>\n            {/* <OnlineUsers>線上人數 {onlineUserList.length} 人</OnlineUsers>\n            <UserList>\n              { onlineUserList.map(user => <User>{user.username}</User>)}\n            </UserList> */}\n          </Sidebar>\n          <CloseSidebarButton onClick={handleSidebarOpen} isSidebarOpen={isSidebarOpen}>\n            <ArrowLeftIcon />\n          </CloseSidebarButton>\n          <Content isSidebarOpen={isSidebarOpen}>\n            <ChatContent className=\"resized\">\n              { messages && messages.map(message => {\n                if (message.isSystemMessage) return (<UserJoinChat key={message.id}>{message.username + ' 加入聊天室'} </UserJoinChat>)\n                return currentUser.username === message.username && !message.isSystemMessage ? (\n                  <SelfMessage key={message.id}>\n                    <MessageContentTime>{new Date(message.timestamp).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit', hour12: true})}</MessageContentTime>\n                    <SelfMessageContent>{message.message}</SelfMessageContent>\n                  </SelfMessage>\n                ):(\n                  <MessageContentContainer key={message.id}>\n                      <UserImages background={message.avatar} />\n                      <UserInfo>\n                        <UserName>{message.username}</UserName>\n                        <UserMessage>\n                          <MessageContent>{message.message}</MessageContent>\n                          <MessageContentTime>{new Date(message.timestamp).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit', hour12: true})}</MessageContentTime>\n                        </UserMessage>\n                      </UserInfo>\n                 </MessageContentContainer>\n                )\n              })}\n            </ChatContent>\n            <InputField onSubmit={handleMessageSubmit}>\n              <Emoji>\n                <EmojiIcon />\n              </Emoji>\n              <Input placeholder=\"輸入想說的話\" value={currentMessage} onChange={handleInputChange} />\n              <SendButton type=\"submit\">\n                <SendIcon />\n              </SendButton>\n            </InputField>\n          </Content>\n        </Chat>\n      </ChatContainer>\n    </Wrapper>\n  );\n}","import React, { useState } from \"react\";\nimport GlobalStyle from \"./constants/globalStyle\";\nimport Footer from \"./components/Footer\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { HomePage, ModePage, ChatPage } from \"./pages\";\nimport { AuthContext } from \"./contexts\";\n\nexport default function App() {\n  const [isUserLogin, setIsUserLogin] = useState(false);\n  const [currentUser, setCurrentUser] = useState({\n    username: \"\",\n    avatar: \"\",\n  });\n\n  return (\n    <AuthContext.Provider value={{ isUserLogin, setIsUserLogin, currentUser, setCurrentUser }}>\n      <HashRouter>\n        <GlobalStyle />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/mode\" component={ModePage} />\n          <Route path=\"/chat/:roomId\" component={ChatPage} />\n        </Switch>\n        <Footer />\n      </HashRouter>\n    </AuthContext.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}